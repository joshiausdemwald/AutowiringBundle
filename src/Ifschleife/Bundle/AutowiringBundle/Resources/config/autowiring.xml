<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="autowiring.annotation_reader.class">Ifschleife\Bundle\AutowiringBundle\Annotation\AnnotationReaderDecorator</parameter>
        <parameter key="autowiring.injector.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\Injector\Injector</parameter>
        <parameter key="autowiring.method_injector.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\Injector\MethodInjector</parameter>
        <parameter key="autowiring.property_injector.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\Injector\PropertyInjector</parameter>
        <parameter key="autowiring.setter_injector.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\Injector\SetterInjector</parameter>
        <parameter key="autowiring.constructor_injector.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\Injector\ConstructorInjector</parameter>
        <parameter key="autowiring.dependency_resolver.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\DependencyResolver</parameter>
        <parameter key="autowiring.classname_mapper.class">Ifschleife\Bundle\AutowiringBundle\Autowiring\ClassnameMapper</parameter>
    </parameters>

    <services>
        <service id="autowiring.annotation_reader" class="%autowiring.annotation_reader.class%" public="false" />
        
        <service id="autowiring.classname_mapper" class="%autowiring.classname_mapper.class%" public="false">
            <argument type="service" id="service_container" />
        </service>
        
        <service id="autowiring.injector" abstract="true" class="%autowiring.injector.class%">
            <argument type="service" id="service_container" />
            <argument type="service" id="autowiring.annotation_reader" />
        </service>
        
        <service parent="autowiring.injector" abstract="true" id="autowiring.method_injector">
            <argument type="service" id="service_container" />
            <argument type="service" id="autowiring.annotation_reader" />
            <argument type="service" id="autowiring.classname_mapper" />
            <argument>%autowiring.setter_injection.wire_by_type%</argument>
        </service>
        
        <service parent="autowiring.method_injector" id="autowiring.setter_injector" class="%autowiring.setter_injector.class%" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="autowiring.annotation_reader" />
            <argument type="service" id="autowiring.classname_mapper" />
            <argument>%autowiring.setter_injection.wire_by_type%</argument>
        </service>
        
        <service parent="autowiring.method_injector" id="autowiring.constructor_injector" class="%autowiring.constructor_injector.class%" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="autowiring.annotation_reader" />
            <argument type="service" id="autowiring.classname_mapper" />
            <argument>%autowiring.setter_injection.wire_by_type%</argument>
        </service>
        
        <service parent="autowiring.injector" id="autowiring.property_injector" class="%autowiring.property_injector.class%" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="autowiring.annotation_reader" />
            <argument>%autowiring.property_injection.wire_by_name%</argument>
            <argument>%autowiring.property_injection.name_suffix%</argument>
        </service>
        
        <service id="autowiring.dependency_resolver" class="%autowiring.dependency_resolver.class%" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="autowiring.classname_mapper" />
            <argument type="service" id="autowiring.property_injector" />
            <argument type="service" id="autowiring.constructor_injector" />
            <argument type="service" id="autowiring.setter_injector" />
        </service>
    </services>
</container>
